@ngdoc overview
@name Tutorial: 210 Selection
@description

This grid example uses the ui-grid-selection directive to row selection. To enable, you must include the 'ui.grid.selection' 
module and you must include the ui-grid-selection directive on your grid element.

Uses the gridOptions.onRegisterApi callback to register the rowSelectionChanged event and log when the row is selected.

By default the module will provide a row header with checkboxes that allow selection of individual rows.  If you set
the `enableRowHeaderSelection` gridOption to false, then the row header is hidden and a click on the row will
result in selection of that row.

Setting the `multiSelect` gridOption to true will allow selecting multiple rows, setting to false will allow selection
of only one row at a time.

If you have `multiSelect: false`, then an additional option `noUnselect` will mean that a row is always selected.  You
can select a different row (which will unselect the current row), but you cannot manually unselect the current row
by clicking on it.  This means that at least one row is always selected, other than when you first open the grid.  If 
necessary you could programatically select the first row upon page open.  The second grid demonstrates this.

@example
Two examples are provided, the first with rowHeaderSelection and multi-select, the second without.

<example module="app">
  <file name="app.js">
    var app = angular.module('app', ['ui.grid', 'ui.grid.selection']);

    app.controller('MainCtrl', ['$scope', '$http', '$log', function ($scope, $http, $log) {
      $scope.gridOptions = { enableRowSelection: true };

      $scope.gridOptions.columnDefs = [
        { name: 'id' },
        { name: 'name'},
        { name: 'age', displayName: 'Age (not focusable)', allowCellFocus : false },
        { name: 'address.city' }
      ];

      $scope.gridOptions.multiSelect = true;

      $http.get('/data/500_complex.json')
        .success(function(data) {
          $scope.gridOptions.data = data;
        });

        $scope.info = {};

        $scope.toggleMultiSelect = function() {
           $scope.gridApi.selection.setMultiSelect(!$scope.gridApi.grid.options.multiSelect);
        };

        $scope.selectAll = function() {
                   $scope.gridApi.selection.selectAllRows();
        };

         $scope.clearAll = function() {
                         $scope.gridApi.selection.clearSelectedRows();
              };

        $scope.toggleRow1 = function() {
                         $scope.gridApi.selection.toggleRowSelection($scope.gridOptions.data[0]);
        };

        $scope.gridOptions.onRegisterApi = function(gridApi){
          //set gridApi on scope
          $scope.gridApi = gridApi;
          gridApi.selection.on.rowSelectionChanged($scope,function(row){
            var msg = 'row selected ' + row.isSelected;
            $log.log(msg);
          });
        };
    }]);
    
    app.controller('SecondCtrl', ['$scope', '$http', '$interval', function ($scope, $http, $interval) {
      $scope.gridOptions = { enableRowSelection: true, enableRowHeaderSelection: false };

      $scope.gridOptions.columnDefs = [
        { name: 'id' },
        { name: 'name'},
        { name: 'age', displayName: 'Age (not focusable)', allowCellFocus : false },
        { name: 'address.city' }
      ];

      $scope.gridOptions.multiSelect = false;
      $scope.gridOptions.noUnselect = true;
      $scope.gridOptions.onRegisterApi = function( gridApi ) {
        $scope.gridApi = gridApi;
      };

      $http.get('/data/500_complex.json')
        .success(function(data) {
          $scope.gridOptions.data = data;
          
          // $interval whilst we wait for the grid to digest the data we just gave it
          $interval( function() {$scope.gridApi.selection.selectRow($scope.gridOptions.data[0]);}, 0, 1);
        });
    }]);
  </file>
  <file name="index.html">
    <div ng-controller="MainCtrl">
     <button type="button" class="btn btn-success" ng-click="toggleMultiSelect()">Toggle multiSelect</button>  <strong>MultiSelect:</strong> <span ng-bind="gridApi.grid.options.multiSelect"></span>
      <button type="button" class="btn btn-success" ng-click="toggleRow1()">Toggle Row 0</button> </span>
      <br/>
      <br/>
      <button type="button" class="btn btn-success" ng-disabled="!gridApi.grid.options.multiSelect" ng-click="selectAll()">Select All</button> </span>
      <button type="button" class="btn btn-success" ng-click="clearAll()">Clear All</button> </span>
      <br>
      <div ui-grid="gridOptions" ui-grid-selection class="grid"></div>
      
    </div>
    <div ng-controller="SecondCtrl">
      Single selection grid without rowHeader:
      <div ui-grid="gridOptions" ui-grid-selection class="grid"></div>
    </div>
  </file>
  <file name="main.css">
    .grid {
      width: 100%;
      height: 400px;
    }
  </file>
</example>